

/*__________________________BACK OFFICE VALIDEE________________________________*/

CREATE OR REPLACE VIEW BACKOFFICE AS
SELECT CLIENT.NAME AS NAME, CLIENT.NUMERO AS NUMERO, ARGENT.SOLDE AS SOLDEA, OFFRE.NAME_OFFRE AS NAMEOFFRE, CREDIT.SOLDE AS SOLDEC, APPEL.DUREE AS DUREE, TRANSACTIONNS.ACTION 
FROM CLIENT LEFT JOIN ARGENT ON CLIENT.NUMERO=ARGENT.NUMERO
LEFT JOIN OFFRE ON OFFRE.NUMERO=ARGENT.NUMERO
LEFT JOIN CREDIT ON CREDIT.NUMERO=OFFRE.NUMERO
LEFT JOIN APPEL ON APPEL.NUMERO=CREDIT.NUMERO
LEFT JOIN TRANSACTIONNS ON APPEL.NUMERO=TRANSACTIONNS.NUMERO;

SELECT * FROM BACKOFFICE;
SELECT * FROM TRANSACTIONNS;
CREATE OR REPLACE VIEW NUM AS 
SELECT CLIENT.NUMERO FROM CLIENT GROUP BY NUMERO;


/*LA SOMME D'ARGENT DANS TOUT LE COMPTE */
SELECT SUM(ARGENT.SOLDE) AS TOUT_ARGENT_DEPOSER FROM ARGENT;
/*SOMME TOTAL DE LA DUREE DES APPELS PASSES*/
SELECT SUM(APPEL.DUREE) AS DUREE_DE_TOUT_APPEL_PASSES FROM APPEL;

CREATE OR REPLACE FUNCTION DATATABLE(NUM IN TEXT)
RETURNS TEXT AS $$
BEGIN 
	IF (SELECT ARGENT.SOLDE FROM ARGENT WHERE NUMERO=NUM) IS NOT NULL THEN
		RETURN CAST((SELECT ARGENT.SOLDE FROM ARGENT WHERE NUMERO=NUM) AS TEXT);
	END IF;
	IF (SELECT OFFRE.NAME_OFFRE FROM OFFRE WHERE NUMERO=NUM) IS NOT NULL THEN
		RETURN (SELECT OFFRE.NAME_OFFRE FROM OFFRE WHERE NUMERO=NUM);
	END IF;
	IF (SELECT CREDIT.SOLDE FROM CREDIT WHERE NUMERO=NUM) IS NOT NULL THEN
		RETURN CAST((SELECT CREDIT.SOLDE FROM CREDIT WHERE NUMERO=NUM) AS TEXT);
	END IF;
	IF (SELECT APPEL.DUREE FROM APPEL WHERE NUMERO=NUM) IS NOT NULL THEN
		RETURN CAST((SELECT APPEL.DUREE FROM APPEL WHERE NUMERO=NUM) AS TEXT);
	END IF;
	RETURN '-_-';
	END$$
LANGUAGE 'plpgsql';



DELETE  FROM TELMA_OFFRE ;

DELETE  FROM ARGENT ;

DELETE  FROM CREDIT ;

DELETE  FROM OFFRE ;

DELETE  FROM APPEL ;

DELETE  FROM COUT ;

DELETE  FROM TRANSACTIONNS ;

DELETE  FROM COMPTE_CLIENT; ;