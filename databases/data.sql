
/*INSERTION CLIENT*/
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('0326018322','RAKOTO',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('032620000','RABE',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03265552','RANJA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03200','RANDI HE',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03201','RANKEE',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03202','ANDRIA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03203','ANDRIA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03204','ANDRIA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03205','ANDRIA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03206','ANDRIA',md5('123456')); 
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03207','ANDRIA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03208','ANDRIA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03209','ANDRIA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03210','ANDRIA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03211','ANDRIA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03212','RAKOTO',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03213','RAKOTO',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03214','RAKOTO',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03215','RAKOTO',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03216','RAKOTO',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03217','RAKOTO',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03218','RAKOTO',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03219','RAKOTO',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03220','RABEEE',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03221','RABEEE',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03222','RABEEE',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03223','RABEEE',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03224','RABEEE',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03225','RABEEE',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03226','RABEEE',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03227','RABEEE',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03228','RASOAA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03229','RASOAA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03230','RASOAA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03231','RASOAA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03232','RASOAA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03233','RASOAA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03234','RASOAA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03235','RASOAA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03236','RASOAA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03237','RASOAA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03238','RASOAA',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03239','RAZAFY',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03240','RAZAFY',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03241','RAZAFY',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03242','RAZAFY',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03243','RAZAFY',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03244','RAZAFY',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03245','RAZAFY',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03246','RAZAFY',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03247','RAZAFY',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03248','RAZAFY',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03249','RAZAFY',md5('123456'));
INSERT INTO CLIENT (NUMERO,NAME,MDP) VALUES ('03250','RAZAFY',md5('123456'));
DELETE FROM CLIENT;
DELETE FROM CREDIT;
DELETE FROM APPEL;
DELETE FROM OFFRE;
DELETE FROM COMPTE_CLIENT;
DELETE FROM ARGENT;
DROP TABLE ARGENT;
ALTER TABLE CLIENT DELETE COLUMN name_telma_offre;
INSERT INTO ADMIN (NAME,PASSWORD) VALUES ('ADMIN',md5('123456'));
INSERT INTO OPERATEUR ( IDOPERATEUR,NAME) VALUES (1, 'TELMA');
INSERT INTO OPERATEUR ( IDOPERATEUR,NAME) VALUES (2, 'ORANGE');
INSERT INTO OPERATEUR ( IDOPERATEUR,NAME) VALUES (3, 'AIRTEL');

/*-----------------------argent--------------------------------*/
INSERT INTO ARGENT (NUMERO, IDOPERATEUR,SOLDE, DATE_DEPOT) VALUES ('0328670805',2,5000,current_timestamp);
INSERT INTO ARGENT (NUMERO, IDOPERATEUR,SOLDE, DATE_DEPOT) VALUES ('0328670805',2,15000,current_timestamp);
INSERT INTO ARGENT (NUMERO, IDOPERATEUR,SOLDE, DATE_DEPOT) VALUES ('032620000',2,15000,current_timestamp);

/*-----------------------CREDIT--------------------------------*/
INSERT INTO CREDIT (NUMERO,IDOPERATEUR,SOLDE,DATE_ACHAT) VALUES ('0326018322',1,1000,current_timestamp);
INSERT INTO CREDIT (NUMERO,IDOPERATEUR,SOLDE,DATE_ACHAT) VALUES ('03250',1,50000,current_timestamp);
INSERT INTO CREDIT (NUMERO,IDOPERATEUR,SOLDE,DATE_ACHAT) VALUES ('03250',1,50000,current_timestamp);


INSERT INTO TELMA_OFFRE(NO)

INSERT INTO OFFRE (NUMERO,IDOPERATEUR,NAME_OFFRE,PRIX_OFFRE,DATE_ACHAT) VALUES ('0326018322',1,'APPEL PLUS',1000,current_timestamp);



INSERT INTO APPEL (NUMERO,IDOPERATEUR, DUREE, DATE_APPEL ) VALUES ('0326018322',1,10,current_timestamp);


INSERT INTO COUT (IDOPERATEUR,COUT_APPEL,COUT_DEPOT,COUT_TRANSFERT) VALUES (1,0.06,0,200);
INSERT INTO COUT (IDOPERATEUR,COUT_APPEL,COUT_DEPOT,COUT_TRANSFERT) VALUES (2,1.6,0,200);
INSERT INTO COUT (IDOPERATEUR,COUT_APPEL,COUT_DEPOT,COUT_TRANSFERT) VALUES (3,6,0,200);


/*DEPOT ARGENT*/
CREATE OR REPLACE FUNCTION DEPOSER (NUM TEXT, )

/*---------------------------------------------------------------------------------------------*/
/*TRANSACTIONNS DE DEPOT SOLDE*/
CREATE OR REPLACE FUNCTION TRANSACTION_DEPOT ( NUM TEXT, A_deposer FLOAT)
RETURNS TEXT AS $$
BEGIN 
	IF (SELECT TRANSACTIONNS.NUMERO FROM TRANSACTIONNS WHERE TRANSACTIONNS.VALIDATION='FALSE' AND NUMERO=NUM ) IS NULL AND NUM IS NOT NULL AND A_deposer IS NOT NULL THEN
		INSERT INTO TRANSACTIONNS(NUMERO,SOLDE,ACTION,VALIDATION) VALUES (NUM,A_deposer,'DEPOT','FALSE');
		RETURN 'DEMANDE DE DEPOT EN ATTENTE...';
	ELSE 
		RETURN 'VOUS AVEZ ENCORE UNE TRASACTION NON VALIDER PAR ADMIN VEUILLEZ VERIFIER VOTRE REQUETTE';
	END IF;
END $$
LANGUAGE 'plpgsql';

CREATE OR REPLACE FUNCTION TRANSACTION_DEPOT (NUM TEXT, A_deposer FLOAT)
RETURNS TEXT AS $$
BEGIN 
	IF (SELECT TRANSACTIONNS.NUMERO FROM TRANSACTIONNS WHERE TRANSACTIONNS.VALIDATION='FALSE' AND NUMERO=NUM ) IS NULL AND NUM IS NOT NULL AND A_deposer IS NOT NULL THEN
		INSERT INTO TRANSACTIONNS(NUMERO,SOLDE,ACTION,VALIDATION) VALUES (NUM,A_deposer,'DEPOT','FALSE');
		RETURN '';
	ELSE 
		RETURN '';
	END IF;
END $$
LANGUAGE 'plpgsql';

SELECT * FROM TRANSACTION_DEPOT('03201',45000);
SELECT * FROM TRANSACTION_DEPOT('03250',450000);
SELECT * FROM TRANSACTION_DEPOT('03200',1000000);	

SELECT * FROM TRANSACTION_DEPOT('03200',1000);
SELECT * FROM TRANSACTION_DEPOT('03200',10000000);
SELECT * FROM TRANSACTIONNS WHERE TRANSACTIONNS.VALIDATION='FALSE' AND NUMERO='03200';
DELETE FROM TRANSACTIONNS WHERE NUMERO='03200';

CREATE OR REPLACE FUNCTION VALIDATION_DEPOT(NUM TEXT, VALIDE TEXT)
RETURNS TEXT AS $$
BEGIN 
	IF (SELECT TRANSACTIONNS.VALIDATION FROM TRANSACTIONNS WHERE NUMERO = NUM AND TRANSACTIONNS.VALIDATION='FALSE')='FALSE' AND VALIDE='TRUE' THEN
		IF (SELECT ARGENT.SOLDE FROM ARGENT WHERE NUMERO=NUM) IS NOT NULL THEN
			UPDATE ARGENT SET SOLDE = SOLDE + (SELECT MAX(TRANSACTIONNS.SOLDE) FROM TRANSACTIONNS WHERE NUMERO=NUM  ) WHERE ARGENT.NUMERO = NUM ;
			UPDATE TRANSACTIONNS SET VALIDATION='TRUE' WHERE NUMERO=NUM;
			RETURN 'SOMME AJOUTEE SUR VOS SOLDE';
		ELSE 
			INSERT INTO ARGENT(NUMERO,IDOPERATEUR,SOLDE,DATE_DEPOT) VALUES (NUM,1,(SELECT TRANSACTIONNS.SOLDE FROM TRANSACTIONNS WHERE NUMERO=NUM ),current_timestamp);
			UPDATE TRANSACTIONNS SET VALIDATION='TRUE' WHERE NUMERO=NUM;
			RETURN 'NOUVELLE SOMME AJOUTEE DANS VOTRE COMPTE';
		END IF;
	ELSE
		RETURN 'EN ATTENTE DE VALIDATION ...';
	END IF;
END $$
LANGUAGE 'plpgsql';

DROP FUNCTION VALIDATION_DEPOT;
SELECT * FROM TRANSACTIONNS WHERE VALIDATION='FALSE' AND NUMERO = '03201';
SELECT * FROM VALIDATION_DEPOT('03201','TRUE');

SELECT * FROM TRANSACTIONNS WHERE VALIDATION='FALSE' AND NUMERO = '03250';
SELECT * FROM VALIDATION_DEPOT('03250','TRUE');
SELECT * FROM ARGENT WHERE NUMERO='03201';

SELECT * FROM TRANSACTIONNS WHERE VALIDATION='FALSE' AND NUMERO = '03200';
SELECT * FROM VALIDATION_DEPOT('03200','TRUE');
SELECT * FROM ARGENT WHERE NUMERO='03200';
/*-----------------------------------------------------------------------------------------------*/
/*ACHAT OFFRE PAR SOLDE MOBILE MONEY*/
CREATE OR REPLACE FUNCTION ACHAT_OFFRE ( NUM TEXT, OFFRE_A_ACHETER TEXT, VOLA_MISY INTEGER )
RETURNS TEXT AS $$
BEGIN 
	IF VOLA_MISY >= (SELECT OFFRE.PRIX_OFFRE FROM OFFRE WHERE NAME_OFFRE=OFFRE_A_ACHETER) THEN
		INSERT INTO COMPTE_CLIENT (NUMERO,SOLDE_MONEY, SOLDE_CREDIT, NAME_OFFRE,DUREE_APPEL_RESTANT)VALUES (NUM,(SELECT (ARGENT.SOLDE)-(OFFRE.PRIX_OFFRE) FROM ARGENT JOIN OFFRE ON ARGENT.NUMERO=OFFRE.NUMERO WHERE ARGENT.NUMERO=NUM),(SELECT CREDIT.SOLDE FROM CREDIT WHERE NUMERO=NUM),(SELECT OFFRE.NAME_OFFRE FROM OFFRE WHERE NUMERO=NUM),(SELECT (CREDIT.SOLDE)/(COUT.COUT_APPEL) FROM CREDIT JOIN COUT ON CREDIT.IDOPERATEUR=COUT.IDOPERATEUR));
		RETURN 'DEMANDE TRAITER AVEC SUCCEE';
	ELSE 
		RETURN 'VOUS NE DISPOSER PA ASSEZ DE SOLDE POUR EFFECTUER CETTE OPERATION';
	END IF;
END $$
LANGUAGE 'plpgsql';
/*-----------------------------------------------------------------------------------------------*/

DROP FUNCTION TRANSACTION_DEPOT;

SELECT * FROM TRANSACTION_DEPOT('0326018322', 999999 , 'TRUE') ;
SELECT * FROM TRANSACTIONNS WHERE NUMERO='03200';

DROP FUNCTION ACHAT_OFFRE;
SELECT * FROM ACHAT_OFFRE('0326018322','APPEL PLUS',1588800);
SELECT * FROM COMPTE_CLIENT;



/*AVOIR TOUT LES CLIENT ET LEURS SOLDES*/
CREATE VIEW SOLDE_MONEY AS 
SELECT CLIENT.NAME AS CLIENT, CLIENT.NUMERO AS NUMERO, ARGENT.SOLDE AS SOLDE,  ARGENT.DATE_DEPOT FROM CLIENT
JOIN ARGENT ON (CLIENT.NUMERO=ARGENT.NUMERO ) ;

SELECT ARGENT.SOLDE AS SOLDE FROM ARGENT  WHERE NUMERO='';

/*AVOIR TOUT LES CLIENT ET LEURS CREDIT DANS LEURS COMPTE*/
CREATE VIEW SOLDE_CREDIT AS 
SELECT CLIENT.NAME AS CLIENT, CLIENT.NUMERO AS NUMERO, CREDIT.SOLDE AS SOLDE_CREDIT, CREDIT.DATE_ACHAT FROM CLIENT 
JOIN CREDIT ON CLIENT.NUMERO=CREDIT.NUMERO;

/*AVOIR TOUT LES CLIENT ET LEURS OFREE DANS LEURS COMPTE*/
CREATE VIEW OFFRE_CLIENT AS 
SELECT CLIENT.NAME AS CLIENT, CLIENT.NUMERO AS NUMERO, OFFRE.NAME_OFFRE AS NAME_OFFRE, OFFRE.DATE_ACHAT FROM CLIENT 
JOIN OFFRE ON CLIENT.NUMERO=OFFRE.NUMERO;

/*AVOIR LE COUT DURRE D'APPEL RESTANT D'UN CLIENT  */
CREATE VIEW STATISTIQUE_APPEL AS 
SELECT CLIENT.NAME AS CLIENT, CLIENT.NUMERO AS NUMERO, APPEL.DUREE AS DUREE_APPEL, APPEL.DATE_APPEL AS DATE_APPEL, (APPEL.DUREE*COUT.COUT_APPEL) AS COUT_APPEL
FROM CLIENT 
JOIN APPEL ON CLIENT.NUMERO=APPEL.NUMERO
JOIN COUT ON APPEL.IDOPERATEUR=COUT.IDOPERATEUR;

SELECT * FROM SOLDE_MONEY;
SELECT * FROM SOLDE_CREDIT;
SELECT * FROM OFFRE_CLIENT;
SELECT * FROM STATISTIQUE_APPEL;
SELECT * FROM COMPTE_CLIENT WHERE NUMERO=;



SELECT COUNT(NUMERO)  FROM CLIENT;

SELECT SUM(SOLDE) FROM ARGENT;

SELECT SUM(DUREE) FROM APPEL;

SELECT COUNT(NAME_OFFRE) FROM OFFRE;

SELECT * FROM ARGENT WHERE NUMERO = '0326018322';

//CREER UNE NOUVELLE OFFRE
 CREATE OR REPLACE FUNCTION CREATION_OFFRE (NAME_O TEXT, PRIX_O INTEGER)
 RETURNS TEXT AS $$
 BEGIN 
 	IF NAME_O IS NOT NULL AND PRIX_O IS NOT NULL THEN
		INSERT INTO TELMA_OFFRE(NAME_TELMA_OFFRE,PRIX_TELMA_OFFRE) VALUES (NAME_O,PRIX_O);
		RETURN 'OFRRE CREER AVEC SUCCEE';
	ELSE
		RETURN 'ERREUR';
	END IF;
END $$
LANGUAGE 'plpgsql';

SELECT * FROM CREATION_OFFRE('BASIC',1000);
SELECT * FROM TELMA_OFFRE;
DROP FUNCTION CREATION_OFFRE;
INSERT


/*__________________________BACK OFFICE VALIDEE________________________________*/

CREATE OR REPLACE VIEW BACKOFFICE AS
SELECT CLIENT.NAME AS NAME, CLIENT.NUMERO AS NUMERO, ARGENT.SOLDE AS SOLDEA, OFFRE.NAME_OFFRE AS NAMEOFFRE, CREDIT.SOLDE AS SOLDEC, APPEL.DUREE AS DUREE, TRANSACTIONNS.ACTION 
FROM CLIENT LEFT JOIN ARGENT ON CLIENT.NUMERO=ARGENT.NUMERO
LEFT JOIN OFFRE ON OFFRE.NUMERO=ARGENT.NUMERO
LEFT JOIN CREDIT ON CREDIT.NUMERO=OFFRE.NUMERO
LEFT JOIN APPEL ON APPEL.NUMERO=CREDIT.NUMERO
LEFT JOIN TRANSACTIONNS ON APPEL.NUMERO=TRANSACTIONNS.NUMERO;

SELECT * FROM BACKOFFICE;
SELECT * FROM TRANSACTIONNS;
CREATE OR REPLACE VIEW NUM AS 
SELECT CLIENT.NUMERO FROM CLIENT GROUP BY NUMERO;


SELECT * FROM DATATABLE('0326018322');
DROP FUNCTION DATATABLE;

CREATE OR REPLACE FUNCTION DATATABLE(NUM IN TEXT)
RETURNS TABLE (
				CLIENT_NAME VARCHAR,
				ARGENT_SOLDE NUMERIC(10,2),
				OFFRE_NAME VARCHAR,
				CREDIT_SOLDE NUMERIC(10,2),
				APPEL_DUREE NUMERIC(10,2)	
			)
AS $$
BEGIN
	RETURN QUERY SELECT CLIENT.NAME ,  ARGENT.SOLDE , OFFRE.NAME_OFFRE , CREDIT.SOLDE , APPEL.DUREE 
	FROM CLIENT LEFT JOIN ARGENT ON CLIENT.NUMERO=ARGENT.NUMERO
	LEFT JOIN OFFRE ON OFFRE.NUMERO=ARGENT.NUMERO
	LEFT JOIN CREDIT ON CREDIT.NUMERO=OFFRE.NUMERO
	LEFT JOIN APPEL ON APPEL.NUMERO=CREDIT.NUMERO;
END $$
LANGUAGE 'plpgsql';

SELECT * FROM DATATABLE('0326018322');

ALTER TABLE TRANSACTIONNS RENAME TO TRANSACTIONNS;



/*CALCUL DU COUT D'appel*/

SELECT COUT_APPEL AS ARIARY_par_SECONDE FROM COUT;


/*SIMULATIONS D'APPEL*/
CREATE OR REPLACE FUNCTION SIMULATION_APPEL(NUM_MIANTSO TEXT,NUM_ATSOINA TEXT,TEMPS_APPEL NUMERIC(10,2))  /*TEMPS_APPEL SERA ENTREE PAR L'INTERFACE*/
RETURNS TEXT AS $$
BEGIN 
	IF (SELECT CREDIT.SOLDE FROM CREDIT WHERE NUMERO=NUM_MIANTSO) > (SELECT COUT.COUT_APPEL FROM COUT) OR ( SELECT OFFRE.PRIX_OFFRE FROM OFFRE WHERE NUMERO=NUM_MIANTSO) > (SELECT COUT.COUT_APPEL FROM COUT) THEN
		INSERT INTO HISTORIQUE_APPEL(NUMERO_APPELANT,NUMERO_APPELER,TYPE_APPEL,DUREE_APPEL,DATE_APPEL) VALUES(NUM_MIANTSO,NUM_ATSOINA,'APPEL',TEMPS_APPEL,current_timestamp);
		INSERT INTO APPEL(NUMERO,IDOPERATEUR,DUREE,DATE_APPEL) VALUES (NUM_ATSOINA,1,TEMPS_APPEL,current_timestamp);
	
	END IF;



CREATE OR REPLACE FUNCTION RECHARGE (NUM TEXT, IDOPERAT INT, CRED INT) 
RETURNS TEXT AS $$
DECLARE
	NEW_CREDIT FLOAT;
	NEW_ARGENT FLOAT;
BEGIN 
	NEW_CREDIT := (SELECT (CREDIT.SOLDE + CRED) FROM CREDIT WHERE CREDIT.DATE_ACHAT = (SELECT MAX(CREDIT.DATE_ACHAT) FROM CREDIT) AND NUMERO = NUM);
	INSERT INTO CREDIT(NUMERO,IDOPERATEUR,SOLDE,DATE_ACHAT) VALUES(NUM,IDOPERAT,NEW_CREDIT,current_timestamp);
	NEW_ARGENT := (SELECT (ARGENT.SOLDE - CRED) FROM ARGENT WHERE ARGENT.DATE_DEPOT = (SELECT MAX(ARGENT.DATE_DEPOT) FROM ARGENT) AND NUMERO = NUM);
	INSERT INTO ARGENT(NUMERO,IDOPERATEUR,SOLDE,DATE_DEPOT) VALUES(NUM,IDOPERAT,NEW_ARGENT,current_timestamp);
	RETURN 'RECHARGE TERMINE AVEC SUCCES';
END $$ 
LANGUAGE 'plpgsql';


CREATE OR REPLACE VIEW OPERATEUR_COUT AS SELECT OPERATEUR.IDOPERATEUR,OPERATEUR.NAME,COUT.COUT_APPEL
FROM OPERATEUR,COUT WHERE OPERATEUR.IDOPERATEUR = COUT.IDOPERATEUR;

CREATE OR REPLACE VIEW HISTORIQUE AS
SELECT OPERATEUR_COUT.IDOPERATEUR,APPEL.NUMERO,APPEL.NUMERO_APPELE,OPERATEUR_COUT.NAME,APPEL.DUREE,
(APPEL.DUREE * OPERATEUR_COUT.COUT_APPEL) AS COUT_APPEL,APPEL.DATE_APPEL 
FROM OPERATEUR_COUT,APPEL WHERE OPERATEUR_COUT.IDOPERATEUR=APPEL.IDOPERATEUR;